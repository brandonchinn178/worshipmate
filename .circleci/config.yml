version: 2.1

aliases:
  - &ci_executor
    working_directory: ~/worshipmate/
    shell: /bin/bash -eux -o pipefail
  - &docker_node_image cimg/node:16.17

orbs:
  codecov: codecov/codecov@3.2.3
  heroku: circleci/heroku@1.2.3

executors:
  docker_node:
    <<: *ci_executor
    docker:
      - image: *docker_node_image

  docker_node_postgres:
    <<: *ci_executor
    docker:
      - image: *docker_node_image
      - image: cimg/postgres:14
        environment:
          POSTGRES_DB: worshipmate
    environment:
      PGUSER: postgres
      PGDATABASE: worshipmate

commands:
  install_yarn_and_deps:
    steps:
      - run: sudo corepack enable
      - restore_cache:
          key: v2-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: Install external dependencies
          command: yarn install --immutable
      - save_cache:
          key: v2-yarn-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache/
            - ~/.cache/Cypress/

jobs:
  test_server:
    executor: docker_node_postgres
    steps:
      - checkout
      - install_yarn_and_deps

      - run: yarn server typecheck
      - run: yarn server test --coverage
      - run: yarn server test:e2e --coverage
      - codecov/upload:
          file: server/coverage/lcov.info,server/coverage-e2e/lcov.info

  build_client:
    executor: docker_node_postgres
    steps:
      - checkout
      - install_yarn_and_deps

      # need running server for getStaticProps in NextJS build
      - run: yarn server migrate up
      - run:
          command: yarn server start:prod
          background: true
      - run:
          name: Wait for server to start
          command: yarn wait-on tcp:4000

      # builds client for testing in CI -- production will
      # build its own Next.js app
      - restore_cache:
          key: v1-next-{{ checksum "yarn.lock" }}
      - run:
          command: yarn client build
          environment:
            NEXT_PUBLIC_UNSAFE_IGNORE_AUTH: 1
      - save_cache:
          key: v1-next-{{ checksum "yarn.lock" }}
          paths:
            - client/.next/cache

      - persist_to_workspace:
          root: .
          paths:
            - client/.next

  test_client:
    executor: docker_node
    steps:
      - checkout
      - install_yarn_and_deps

      - run: yarn client typecheck

      - run: yarn client test --coverage
      - codecov/upload:
          file: client/coverage/lcov.info

  test_cypress:
    executor: docker_node_postgres
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - attach_workspace:
          at: .
      - install_yarn_and_deps
      - run:
          name: Install Cypress dependencies
          command: |
            sudo apt-get update
            sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - run:
          name: Run server in background
          command: yarn server start:prod
          environment:
            UNSAFE_IGNORE_AUTH: 1
          background: true
      - run:
          name: Run client in background
          command: yarn client start:prod
          background: true
      - run:
          name: Run database test server in background
          command: yarn server :ts-node -s bin/startDatabaseTestServer.ts
          background: true
      - run:
          name: Run migrations
          command: yarn server migrate up

      - run:
          name: Wait for services
          command: yarn wait-on tcp:4000 tcp:3000 tcp:4040

      - run:
          name: Run Cypress tests
          command: yarn client cypress run
      - store_artifacts:
          path: client/cypress/videos/
      - store_artifacts:
          path: client/cypress/screenshots/

  lint_all:
    executor: docker_node
    steps:
      - checkout
      - install_yarn_and_deps

      - run:
          name: Install pre-commit
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            curl https://pre-commit.com/install-local.py | python3 -
      - run:
          name: Run pre-commit
          command: pre-commit run --all-files

      - run:
          name: Check that server GraphQL files are up to date
          command: |
            yarn server codegen
            git diff --exit-code server/
      - run:
          name: Check that client GraphQL files are up to date
          command: |
            yarn client codegen
            git diff --exit-code client/

  deploy:
    executor: docker_node
    steps:
      - checkout
      # - heroku/deploy-via-git:
      #     force: true
      - run:
          name: Install Vercel CLI
          command: sudo npm install -g vercel
      - run:
          name: Deploy client
          command: vercel --token "${VERCEL_TOKEN}" --prod --confirm

workflows:
  version: 2

  build_and_test:
    jobs:
      - test_server
      - build_client
      - test_client
      - test_cypress:
          requires:
            - build_client
      - lint_all
      - deploy:
          filters:
            branches:
              only: main
          requires:
            - test_server
            - build_client
            - test_client
            - test_cypress
            - lint_all
